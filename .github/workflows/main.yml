name: Docker Compose Up on Green Checkmark

on:
  push:
    branches:
      - main # Or your main branch name
    paths-ignore:
      - '**.md'
      - 'LICENSE'

jobs:
  deploy:
    if: github.event.head_commit.author.name != 'github-actions[bot]'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Логин Docker Hub
          password: ${{ secrets.DOCKER_PASSWORD }}  # Пароль Docker Hub

      - name: Replace Alembic URL in configuration
        run: |
          sed -i "s|^sqlalchemy.url = .*|sqlalchemy.url = ${{ secrets.ALEMBIC_URL }}|" alembic.ini 
      
      - name: Replace token in ini file
        run: |
          sed -i "s|^token = .*|token = ${{ secrets.TELEGRAM_BOT_TOKEN }}|" config.ini 

      - name: Replace DB password in ini file
        run: |
          sed -i "s|^password = .*|password = ${{ secrets.DB_PASSWORD }}|" config.ini 


      - name: Replace DB hostname in ini file

        run: |
          sed -i "s|^host = .*|host = ${{ secrets.DB_IP }}|" config.ini

      - name: Docker Build Container
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/task-bot-srv:latest .
      
      - name: Docker Push Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/task-bot-srv:latest

      - name: Deploy to VPS (via SSH)
        run: |
          sshpass -p "${{ secrets.ROOT_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
            # Загружаем образ из Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/task-bot-srv:latest

            # Останавливаем и удаляем старый контейнер, если он существует
            docker stop task-bot-srv || true
            docker rm task-bot-srv || true

            # Запускаем новый контейнер с образом из Docker Hub
            docker run -d --name task-bot-srv -p 8081:8081 ${{ secrets.DOCKER_USERNAME }}/task-bot-srv:latest
            echo "Docker Restart"
            docker start task-bot-srv
          EOF
